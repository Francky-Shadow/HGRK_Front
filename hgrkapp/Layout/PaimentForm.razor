@inject hgrkapp.DTO.paiement paiement
@inject hgrkapp.DTO.SearchStudentResultDto search
@inject hgrkapp.Repository.IServices.IPaiementServices PaimentService
<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Enregistrement des paiments</h4>
            <p class="card-description">
                Formulaire paiement
            </p>

            <div class="form-group">
                <label for="exampleInputName1">Identité de l'étudiant</label>
                <input type="text" class="form-control" readonly   @bind="search.Fulname">
            </div>

            <div class="form-group">
                <label for="exampleInputName1">RtxNum</label>
                <input type="text" class="form-control" @bind="RtxNum" readonly placeholder="Code">
            </div>

            <div class="form-group">
                <label for="exampleInputEmail3">Montant</label>
                <input type="number" class="form-control" @bind="paiement.Montant">
            </div>

            <div class="form-group">
                <label>Type de paiement</label>
                <input type="text" class="form-control"  @bind="paiement.TypePaiement">
            </div>

            <button type="submit" class="btn btn-primary mr-2" @onclick="OnPostData">Soumettre</button>
            <button class="btn btn-light" @onclick="OnButtonClicked">Annuler</button>
        </div>
    </div>
</div>
@code {

    [Parameter]
    public EventCallback<bool> OnChange { get; set; }
    private async Task OnButtonClicked()
    {

        await OnChange.InvokeAsync(false);
    }

    string RtxNum = "";string fulname = "";
    private string GenerateSlug()
    {
        // Obtenir la date actuelle au format YYYYMMDDHHMMSS
        string dateTimeString = DateTime.Now.ToString("yyyyMMddHHmmss");

        // Générer un nouveau GUID
        string guid = Guid.NewGuid().ToString();

        // Concaténer la date et le GUID pour créer le slug
        string slug = $"{dateTimeString}-{guid}";

        return slug;
    }
    protected override void OnInitialized()
    {
        fulname = search.Fulname;
        RtxNum = GenerateSlug();
        base.OnInitialized();
    }

    private async void OnPostData()
    {
        paiement.RtxNum = RtxNum;
        paiement.IdEtudiant = search.Id;
        var data = await PaimentService.CreatePaiment(paiement);
        await OnChange.InvokeAsync(false);
    }
}
