@inject hgrkapp.DTO.stage stage
@inject hgrkapp.Repository.IServices.IStageService ServiceStage
@inject hgrkapp.Repository.IServices.IUniversiteServices UniversiteService
@inject hgrkapp.DTO.universite universite

<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Enregistrement stage</h4>
            <p class="card-description">
                Formulaire stage
            </p>

            <div class="form-group">
                <label for="exampleInputName1">Nom de l'université</label>
                <select class="form-select"  @bind="stage.IdUniversite" >
                            <option value="">Sélectionner</option>
                    @foreach(var data in universites)
                    {
                         <option value="@data.Id">@data.Nom</option>
                    }
                </select>
           
            </div>

            <button type="submit" class="btn btn-primary mr-2" @onclick="OnPostData">Soumettre</button>
            <button class="btn btn-light">Cancel</button>
        </div>
    </div>
</div>
@code {

    private List<hgrkapp.DTO.universite> universites = new List<hgrkapp.DTO.universite>();
    [Parameter]
    public EventCallback<bool> OnChange { get; set; }
    protected override async Task OnInitializedAsync()
    {
        universites = await UniversiteService.GetUniversite();
    }

    private async void OnPostData()
    {
        stage.EtatStage = "en cours";
       
        var data = await ServiceStage.CreateStage(stage);
        await OnChange.InvokeAsync(true);
    }
}
