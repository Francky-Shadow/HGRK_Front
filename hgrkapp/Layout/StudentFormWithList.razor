@inject hgrkapp.DTO.etudiant etudiantdto
@inject hgrkapp.DTO.universite universite
@inject  hgrkapp.DTO.groupe groupe
@inject hgrkapp.DTO.stage stage
@inject hgrkapp.Repository.IServices.IEtudiantServices EtudiantServices
@inject hgrkapp.Repository.IServices.IUniversiteServices UniversiteService
@inject hgrkapp.Repository.IServices.IGroupeServices GroupeService
@inject hgrkapp.Repository.IServices.IStageService StageService
@inject hgrkapp.DTO.EtudiantSimilaireInfo simdata
<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Enregistrement</h4>
            <p class="card-description">
                Formulaire d'enregistrement des étudiants
            </p>
            <div class="row">
                <div class="col-md-6">
                    <!-- Nom -->
                    <div class="form-group">
                        <label for="nom">Nom</label>
                        <input type="text" class="form-control" @bind="etudiantdto.Nom" placeholder="Entrez le nom">
                    </div>

                    <!-- Postnom -->
                    <div class="form-group">
                        <label for="postnom">Postnom</label>
                        <input type="text" class="form-control" @bind="etudiantdto.Postnom" placeholder="Entrez le postnom">
                    </div>

                    <!-- Prénom -->
                    <div class="form-group">
                        <label for="prenom">Prénom</label>
                        <input type="text" class="form-control" @bind="etudiantdto.Prenom" placeholder="Entrez le prénom">
                    </div>

                   <div class="form-group">
                       <button class="btn btn-primary mt-3" @onclick="EnregistrerEtudiant">Ajouter <i class="fa fa-plus-circle"></i></button>
                    </div>
                  
                </div>

                <div class="col-md-6">
                   
                    <div class="form-group">
      <label for="dateNaissance">Date de Naissance</label>
      <input type="date" class="form-control" @bind="etudiantdto.DateNaissance">
  </div>

  <!-- Sexe -->
  <div class="form-group">
      <label>Sexe</label>
      <select class="form-select" @bind="etudiantdto.Sexe">
            <option value="">--Sélectionner--</option>
          <option value="M">Masculin</option>
          <option value="F">Féminin</option>
      </select>
  </div>

    <!-- Photo URL -->
    @*<div class="form-group">
        <label for="photoUrl">Photo URL</label>
        <input type="file" accept="image/*" class="form-control" @bind="etudiantdto.PhotoUrl" placeholder="URL de la photo">
    </div>*@


    <!-- Autres -->
    <div class="form-group">
        <label for="autres">Autres informations</label>
        <input type="text" class="form-control" @bind="etudiantdto.Autres" />
    </div>
</div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Postnom</th>
            <th>Prénom</th>
            <th>Date de naissance</th>
            <th>Sexe</th>
            <th>A payé</th>
            <th>État du stage</th>
            @*<th>Photo URL</th>*@
            <!-- Ajoutez d'autres en-têtes ici selon vos besoins -->
        </tr>
    </thead>
    <tbody>
        @foreach (var etudiant in listeEtudiants)
        {
            <tr>
                <td>@etudiant.Nom</td>
                <td>@etudiant.Postnom</td>
                <td>@etudiant.Prenom</td>
                <td>@etudiant.DateNaissance?.ToShortDateString()</td>
                <td>@etudiant.Sexe</td>
                <td>@(etudiant.Apaye.HasValue && etudiant.Apaye.Value ? "Oui" : "Non")</td>
                <td>@etudiant.EtatStage</td>
                @*<td>@etudiant.PhotoUrl</td>*@
                <!-- Ajoutez d'autres colonnes ici selon vos besoins -->
            </tr>
        }
    </tbody>
</table>

           
<button type="submit" class="btn btn-primary mr-2" @onclick="OnCancelData"><i class="fa fa-arrow-alt-circle-left"></i> Retour</button>
<button class="btn btn-success" @onclick="OnPostData">Suivant <i class="fa fa-arrow-alt-circle-right"></i></button>
</div>
</div>
</div>

@code {
     private List<hgrkapp.DTO.etudiant> listeEtudiants = new List<hgrkapp.DTO.etudiant>();

    private void EnregistrerEtudiant()
    {
    // Ajouter l'étudiant à la liste
    
    if (etudiantdto.Nom!=null && etudiantdto.Postnom!=null && etudiantdto.Sexe!=null)
            {
                 listeEtudiants.Add(new DTO.etudiant
               {
                   Nom = etudiantdto.Nom,
                   Postnom = etudiantdto.Postnom,
                   Prenom = etudiantdto.Prenom,
                   DateNaissance = etudiantdto.DateNaissance,
                   Sexe = etudiantdto.Sexe,
                   Apaye = false,
                   EtatStage = "en cours",
                   IdGroupe=simdata.IdGroupe,
                   IdStage=simdata.IdStage,
                   IdUniversite=simdata.IdUniversite,
                   PhotoUrl = etudiantdto.PhotoUrl,
                   
      
       
                   // Ajoutez d'autres propriétés ici selon vos besoins
               });
            }

        // Réinitialiser le formulaire
        etudiantdto= new DTO.etudiant();
    }
    [Parameter]
    public EventCallback<bool> OnChange { get; set; }
    private List<hgrkapp.DTO.universite> universites = new List<hgrkapp.DTO.universite>();
    private List<hgrkapp.DTO.groupe> groupes = new List<DTO.groupe>();
    private List<hgrkapp.DTO.stage> stages = new List<DTO.stage>();
    protected override async Task OnInitializedAsync()
    {
        universites = await UniversiteService.GetUniversite();
        groupes = await GroupeService.GetGroupes();
        stages = await StageService.GetAllStage();
    }

     [Parameter]
 public EventCallback<bool> OnChangeGroup { get; set; }


     [Parameter]
 public EventCallback<bool> OnCancelGroup { get; set; }

 private async void OnCancelData()
 {
     OnCancelGroup.InvokeAsync(true);
 }

    private async void OnPostData()
    {
        EtudiantServices.SaveListOffStudent(listeEtudiants);
        OnChangeGroup.InvokeAsync(true);
        await OnChange.InvokeAsync(true);
    }
}
