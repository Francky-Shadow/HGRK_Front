@page "/"
@inject hgrkapp.DTO.EtudiantMixedDto mixed
@inject hgrkapp.Repository.IServices.IMixedServices Service
@inject hgrkapp.Repository.IServices.ICountServices CountService
@inject hgrkapp.DTO.CountDto dto
@attribute [Microsoft.AspNetCore.Authorization.Authorize]

<div class="row">
    <div class="col-md-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between justify-content-md-center justify-content-xl-between flex-wrap mb-4">
                    <div>
                        <p class="mb-2 text-md-center text-lg-left">Total Etudiants</p>
         
                         <h1 class="mb-0">@dto.EtudiantCount</h1>
            
                       
                    </div>
                    <i class="typcn typcn-briefcase icon-xl text-secondary"></i>
                </div>
                <canvas id="expense-chart" height="80"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between justify-content-md-center justify-content-xl-between flex-wrap mb-4">
                    <div>
                        <p class="mb-2 text-md-center text-lg-left">Total groupes</p>
               
              <h1 class="mb-0">@dto.GroupeCount</h1>
                 
                    </div>
                    <i class="typcn typcn-chart-pie icon-xl text-secondary"></i>
                </div>
                <canvas id="budget-chart" height="80"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between justify-content-md-center justify-content-xl-between flex-wrap mb-4">
                    <div>
                        <p class="mb-2 text-md-center text-lg-left">Stages en cours</p>

              <h1 class="mb-0">@dto.StageCount</h1>
 
                    </div>
                    <i class="typcn typcn-clipboard icon-xl text-secondary"></i>
                </div>
                <canvas id="balance-chart" height="80"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="table-responsive pt-3">
                <table class="table table-striped project-orders-table">
                    <thead>
                        <tr>
                            <th class="ml-5">ID</th>
                            <th>Debut</th>
                            <th>Fin</th>
                            <th>Universite</th>
                            <th>Nombre</th>
                            <th>Etat</th>
                        </tr>
                    </thead>
                    <tbody>
                           @foreach (var data in StageUnivList)
                        {
                        <tr>
                                <td>#@data.IdStage</td>
                                <td>@data.DateDebut </td>
                                <td>@data.DateFin</td>
                                <td>@data.NomUniversite</td>
                                <td>@data.NombreEtudiants</td>
                                <td>@data.EtatStage</td>
                        </tr>
                         }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code{
    private List<UniversiteStageDto> StageUnivList = new List<UniversiteStageDto>();




    protected override async Task OnInitializedAsync()
    {
        StageUnivList = await Service.GetUniversiteStageAsync();
        dto = await CountService.GetCountsInEnCoursAsync();

    }
}
