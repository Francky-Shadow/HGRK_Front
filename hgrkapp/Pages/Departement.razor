@page "/departements"
@inject hgrkapp.DTO.departement departement
@inject hgrkapp.Repository.IServices.IDepartementServices DepartementServices
@if (departementList != null)
            {
    <DataGrid TItem="hgrkapp.DTO.departement"
          Data="@departementList"
          @bind-SelectedRow="@selectedDepartement"
          Editable="true"
          RowUpdated="@OnRowUpdated"
          RowInserted="@OnRowInserted"
          Responsive>
    <DataGridCommandColumn>
        <NewCommandTemplate>
            <Blazorise.Button Color="Blazorise.Color.Success" Clicked="@context.Clicked">Nouveau</Blazorise.Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Blazorise.Button Color="Blazorise.Color.Primary" Clicked="@context.Clicked"><i  class="fa fa-edit"></i></Blazorise.Button>
        </EditCommandTemplate>
         <DeleteCommandTemplate>
             <Blazorise.Button Color="Blazorise.Color.Danger" Clicked="@context.Clicked"><i class="fa fa-trash"></i></Blazorise.Button>
         </DeleteCommandTemplate>
         <CancelCommandTemplate>
             <Blazorise.Button Color="Blazorise.Color.Primary" Clicked="@context.Clicked">Annuler</Blazorise.Button>
         </CancelCommandTemplate>
           <SaveCommandTemplate>
                <Blazorise.Button Color="Blazorise.Color.Warning" Clicked="@context.Clicked">Enregistrer</Blazorise.Button>
        </SaveCommandTemplate>
    </DataGridCommandColumn>
    <DataGridColumn Field="@nameof(hgrkapp.DTO.departement.Id)" Caption="#" Sortable="false" />
    <DataGridColumn Field="@nameof(hgrkapp.DTO.departement.Nom)" Caption="Nom" Editable/>
    <DataGridColumn Field="@nameof(hgrkapp.DTO.departement.DateDajout)" Caption="Date d'ajout" Editable/>
    <DataGridColumn Field="@nameof(hgrkapp.DTO.departement.LocalId)" Caption="Id Local" Editable/>

   
</DataGrid>

            }

@code {
    private List<hgrkapp.DTO.departement> departements = new List<hgrkapp.DTO.departement>();
    [Parameter]
    public EventCallback<bool> OnChangeGroup { get; set; }

    private async Task OnButtonClicked()
    {

        await OnChangeGroup.InvokeAsync(false);
    }
    private async Task OnRowInserted(SavedRowItem<hgrkapp.DTO.departement,Dictionary<string,object>> savedRowItem)
{
    // Accédez aux données saisies à partir de l'objet SavedRowItem
    var newData = savedRowItem.Item; // newData contient les données saisies

    // Insérez les données dans la base de données
    await InsertDataIntoDatabase(newData);

    // Effacez l'objet selectedDepartement ou effectuez d'autres actions après l'enregistrement
    selectedDepartement = new hgrkapp.DTO.departement();
}

private async Task InsertDataIntoDatabase(hgrkapp.DTO.departement data)
{
    // Appeler votre méthode de service pour insérer les données dans la base de données
    await DepartementServices.CreateDepartement(data);

    // En option, déclencher un événement ou effectuer d'autres actions après l'insertion
    await OnChangeGroup.InvokeAsync(true);
}

    private async Task OnRowUpdated(SavedRowItem<hgrkapp.DTO.departement,Dictionary<string,object>> savedRowItem)
    {
        try
        {
            var updatedData = savedRowItem.Item; // Données mises à jour

            // Mettre à jour les données dans la base de données
            await UpdateDataInDatabase(updatedData);

            // Effacer l'objet selectedDepartement ou effectuer d'autres actions après la mise à jour
            selectedDepartement = null;
        }
        catch (Exception ex)
        {
            // Gérer les exceptions, par exemple, afficher un message d'erreur
            Console.WriteLine($"Erreur lors de la mise à jour : {ex.Message}");
        }
    }

    private async Task UpdateDataInDatabase(hgrkapp.DTO.departement updatedData)
    {
        // Appeler votre méthode de service pour mettre à jour les données dans la base de données
        await DepartementServices.UpdateDepartement(updatedData.Id, updatedData);

        // En option, déclencher un événement ou effectuer d'autres actions après la mise à jour
        await OnChangeGroup.InvokeAsync(true);
    }

    private List<hgrkapp.DTO.departement> departementList;
    private hgrkapp.DTO.departement selectedDepartement;

    protected override async Task OnInitializedAsync()
    {
        departementList = await DepartementServices.GetDDepartements();
        await base.OnInitializedAsync();
    }
}
